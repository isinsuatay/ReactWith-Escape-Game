{"ast":null,"code":"var _jsxFileName = \"/Users/isinsuatay/Desktop/react-game-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst size = 15;\nconst exitPos = [size - 1, size - 1];\nfunction generateObstacles(gameMap, playerPos, obstacleCount) {\n  const newMap = [...gameMap];\n  for (let i = 0; i < obstacleCount; i++) {\n    let x, y;\n    do {\n      x = Math.floor(Math.random() * size);\n      y = Math.floor(Math.random() * size);\n    } while (x === playerPos[0] && y === playerPos[1] || newMap[x][y] !== '.');\n    newMap[x][y] = 'obstacle';\n  }\n  return newMap.map(row => [...row]); // Shallow copy to ensure a new reference\n}\nfunction isValidMove(x, y, gameMap) {\n  return x >= 0 && x < size && y >= 0 && y < size && gameMap[x][y] !== 'obstacle';\n}\nfunction Game() {\n  _s();\n  const [gameMap, setGameMap] = useState([]);\n  const [playerPos, setPlayerPos] = useState([0, 0]);\n  useEffect(() => {\n    initializeGame();\n  }, []);\n  useEffect(() => {\n    function handleKeyDown(event) {\n      let dx = 0,\n        dy = 0;\n      switch (event.key) {\n        case 'ArrowUp':\n          dx = -1;\n          break;\n        case 'ArrowDown':\n          dx = 1;\n          break;\n        case 'ArrowLeft':\n          dy = -1;\n          break;\n        case 'ArrowRight':\n          dy = 1;\n          break;\n        default:\n          return;\n      }\n      movePlayer(dx, dy);\n    }\n    document.addEventListener('keydown', handleKeyDown);\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [gameMap, playerPos]);\n  function initializeGame() {\n    const newMap = [];\n    for (let i = 0; i < size; i++) {\n      const rowData = Array(size).fill('.');\n      newMap.push(rowData);\n    }\n    setGameMap(newMap);\n  }\n  function resetGame() {\n    const newMap = [];\n    for (let i = 0; i < size; i++) {\n      const rowData = Array(size).fill('.');\n      newMap.push(rowData);\n    }\n    const updatedMap = generateObstacles(newMap, [0, 0], 1);\n    setGameMap(updatedMap);\n    setPlayerPos([0, 0]);\n  }\n  function movePlayer(dx, dy) {\n    const newPosX = playerPos[0] + dx;\n    const newPosY = playerPos[1] + dy;\n    if (isValidMove(newPosX, newPosY, gameMap)) {\n      setPlayerPos([newPosX, newPosY]);\n      if (newPosX === exitPos[0] && newPosY === exitPos[1]) {\n        alert(\"Congratulations! You escaped from the Dungeon!\");\n        resetGame();\n      } else {\n        setGameMap(prevMap => generateObstacles(prevMap, [newPosX, newPosY], 1));\n      }\n    } else {\n      alert(\"Game over.\");\n      resetGame();\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Escape Dungeon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      id: \"gameTable\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: gameMap.map((rowData, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: rowData.map((cellType, colIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n            className: `cell ${cellType} ${rowIndex === exitPos[0] && colIndex === exitPos[1] ? 'exit' : ''} ${playerPos[0] === rowIndex && playerPos[1] === colIndex ? 'player' : ''}`\n          }, `${rowIndex}-${colIndex}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 33\n          }, this))\n        }, rowIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 9\n  }, this);\n}\n_s(Game, \"mUO+XtILHOkpP/aMyW+NvTY7Fx0=\");\n_c = Game;\n;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","size","exitPos","generateObstacles","gameMap","playerPos","obstacleCount","newMap","i","x","y","Math","floor","random","map","row","isValidMove","Game","_s","setGameMap","setPlayerPos","initializeGame","handleKeyDown","event","dx","dy","key","movePlayer","document","addEventListener","removeEventListener","rowData","Array","fill","push","resetGame","updatedMap","newPosX","newPosY","alert","prevMap","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","rowIndex","cellType","colIndex","_c","$RefreshReg$"],"sources":["/Users/isinsuatay/Desktop/react-game-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nconst size = 15;\nconst exitPos = [size - 1, size - 1];\n\nfunction generateObstacles(gameMap, playerPos, obstacleCount) {\n    const newMap = [...gameMap];\n    for (let i = 0; i < obstacleCount; i++) {\n        let x, y;\n        do {\n            x = Math.floor(Math.random() * size);\n            y = Math.floor(Math.random() * size);\n        } while ((x === playerPos[0] && y === playerPos[1]) || newMap[x][y] !== '.');\n        newMap[x][y] = 'obstacle';\n    }\n    return newMap.map(row => [...row]); // Shallow copy to ensure a new reference\n}\n\nfunction isValidMove(x, y, gameMap) {\n    return x >= 0 && x < size && y >= 0 && y < size && gameMap[x][y] !== 'obstacle';\n}\n\nfunction Game() {\n    const [gameMap, setGameMap] = useState([]);\n    const [playerPos, setPlayerPos] = useState([0, 0]);\n\n    useEffect(() => {\n        initializeGame();\n    }, []);\n\n    useEffect(() => {\n        function handleKeyDown(event) {\n            let dx = 0, dy = 0;\n            switch(event.key) {\n                case 'ArrowUp':\n                    dx = -1;\n                    break;\n                case 'ArrowDown':\n                    dx = 1;\n                    break;\n                case 'ArrowLeft':\n                    dy = -1;\n                    break;\n                case 'ArrowRight':\n                    dy = 1;\n                    break;\n                default:\n                    return;\n            }\n            movePlayer(dx, dy);\n        }\n\n        document.addEventListener('keydown', handleKeyDown);\n\n        return () => {\n            document.removeEventListener('keydown', handleKeyDown);\n        };\n    }, [gameMap, playerPos]);\n\n    function initializeGame() {\n        const newMap = [];\n        for (let i = 0; i < size; i++) {\n            const rowData = Array(size).fill('.');\n            newMap.push(rowData);\n        }\n        setGameMap(newMap);\n    }\n    function resetGame() {\n        const newMap = [];\n        for (let i = 0; i < size; i++) {\n            const rowData = Array(size).fill('.');\n            newMap.push(rowData);\n        }\n        const updatedMap = generateObstacles(newMap, [0, 0], 1);\n        setGameMap(updatedMap);\n        setPlayerPos([0, 0]);\n    }\n    \n    \n\n    function movePlayer(dx, dy) {\n        const newPosX = playerPos[0] + dx;\n        const newPosY = playerPos[1] + dy;\n\n        if (isValidMove(newPosX, newPosY, gameMap)) {\n            setPlayerPos([newPosX, newPosY]);\n            if (newPosX === exitPos[0] && newPosY === exitPos[1]) {\n                alert(\"Congratulations! You escaped from the Dungeon!\");\n                resetGame();\n            } else {\n                setGameMap(prevMap => generateObstacles(prevMap, [newPosX, newPosY], 1));\n            }\n        } else {\n            alert(\"Game over.\");\n            resetGame();\n        }\n    }\n\n    return (\n        <div className=\"game-container\">\n            <h1>Escape Dungeon</h1>\n            <table id=\"gameTable\">\n                <tbody>\n                    {gameMap.map((rowData, rowIndex) => (\n                        <tr key={rowIndex}>\n                            {rowData.map((cellType, colIndex) => (\n                                <td key={`${rowIndex}-${colIndex}`} className={`cell ${cellType} ${rowIndex === exitPos[0] && colIndex === exitPos[1] ? 'exit' : ''} ${playerPos[0] === rowIndex && playerPos[1] === colIndex ? 'player' : ''}`}>\n                                </td>\n                            ))}\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        </div>\n    );\n};\n\nexport default Game;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}